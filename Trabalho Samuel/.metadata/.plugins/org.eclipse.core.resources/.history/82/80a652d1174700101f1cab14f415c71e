package com.cinelume.view;

import com.cinelume.controller.SerieController;
import com.cinelume.controller.UsuarioController;
import com.cinelume.model.Serie;
import java.util.List;
import java.util.Scanner;

public class MenuView {
    private final Scanner scanner;
    private final UsuarioController usuarioController;
    private final SerieController serieController;

    public MenuView(UsuarioController usuarioController, SerieController serieController) {
        this.scanner = new Scanner(System.in);
        this.usuarioController = usuarioController;
        this.serieController = serieController;
    }

    public void exibirBoasVindas() {
        System.out.println("=================================");
        System.out.println("|      BEM-VINDO AO CINELUME     |");
        System.out.println("=================================\n");
    }

    public void realizarLogin() {
        System.out.print("Digite seu nome de usu√°rio: ");
        String nomeUsuario = scanner.nextLine();
        usuarioController.login(nomeUsuario);
        System.out.println("\n‚úî Login realizado com sucesso!\n");
    }

    public void exibirMenuPrincipal() {
        int opcao;
        do {
            System.out.println("\n======== MENU PRINCIPAL ========");
            System.out.println("1. Buscar S√©ries");
            System.out.println("2. Minhas Listas");
            System.out.println("3. Ordenar Listas");
            System.out.println("4. Sair");
            System.out.print("Escolha uma op√ß√£o (1-4): ");
            
            try {
                opcao = Integer.parseInt(scanner.nextLine());
                
                switch (opcao) {
                    case 1:
                        buscarSeries();
                        break;
                    case 2:
                        exibirMenuListas();
                        break;
                    case 3:
                        ordenarListas();
                        break;
                    case 4:
                        System.out.println("\nAt√© logo! üëã");
                        break;
                    default:
                        System.out.println("\n‚ö† Op√ß√£o inv√°lida. Tente novamente.");
                }
            } catch (NumberFormatException e) {
                System.out.println("\n‚ö† Por favor, digite um n√∫mero entre 1 e 4.");
                opcao = 0;
            }
        } while (opcao != 4);
    }

    public void buscarSeries() {
        System.out.print("\nüîç Digite o nome da s√©rie: ");
        String query = scanner.nextLine().trim();
        
        if (query.isEmpty()) {
            System.out.println("\n‚ö† O termo de busca n√£o pode ser vazio.");
            return;
        }

        try {
            List<Serie> resultados = serieController.buscarSeries(query);
            exibirResultadosSeries(resultados);
            
            if (!resultados.isEmpty()) {
                System.out.print("\n‚≠ê Deseja adicionar alguma s√©rie a uma lista? (S/N): ");
                String resposta = scanner.nextLine();
                
                if (resposta.equalsIgnoreCase("S")) {
                    adicionarSerieLista(resultados);
                }
            }
        } catch (Exception e) {
            System.err.println("\n‚ùå Erro na busca: " + e.getMessage());
        }
    }

    private void exibirResultadosSeries(List<Serie> series) {
        System.out.println("\n================ RESULTADOS ================");
        if (series.isEmpty()) {
            System.out.println("Nenhuma s√©rie encontrada.");
            return;
        }

        for (int i = 0; i < series.size(); i++) {
            System.out.printf("%d. %s\n", i + 1, series.get(i).getInfoFormatada());
        }
        System.out.println("===========================================");
    }

    private void adicionarSerieLista(List<Serie> series) {
        try {
            System.out.print("\nüî¢ Digite o n√∫mero da s√©rie: ");
            int numeroSerie = Integer.parseInt(scanner.nextLine()) - 1;
            
            if (numeroSerie < 0 || numeroSerie >= series.size()) {
                System.out.println("‚ö† N√∫mero inv√°lido. Digite entre 1 e " + series.size());
                return;
            }

            Serie serieSelecionada = series.get(numeroSerie);
            
            System.out.println("\nüìã LISTAS DISPON√çVEIS:");
            System.out.println("1. Assistir mais tarde (Watchlist)");
            System.out.println("2. J√° assistidas (Watched)");
            System.out.println("3. Favoritas (Favorites)");
            System.out.print("Escolha uma lista (1-3): ");
            
            int opcaoLista = Integer.parseInt(scanner.nextLine());
            String tipoLista;
            
            switch (opcaoLista) {
                case 1:
                    tipoLista = "watchlist";
                    break;
                case 2:
                    tipoLista = "watched";
                    break;
                case 3:
                    tipoLista = "favorites";
                    break;
                default:
                    System.out.println("‚ö† Op√ß√£o inv√°lida. Opera√ß√£o cancelada.");
                    return;
            }
            
            // Chamada CORRETA para o m√©todo do controller
            usuarioController.adicionarSerieALista(serieSelecionada, tipoLista);
            System.out.println("\n‚úî S√©rie '" + serieSelecionada.getName() + "' adicionada √† lista " + tipoLista + "!");
            
        } catch (NumberFormatException e) {
            System.out.println("‚ö† Erro: Digite apenas n√∫meros v√°lidos.");
        } catch (Exception e) {
            System.err.println("‚ùå Erro ao adicionar s√©rie: " + e.getMessage());
        }
    }

    private void exibirMenuListas() {
        System.out.println("\nüìö MINHAS LISTAS");
        System.out.println("1. Assistir mais tarde");
        System.out.println("2. J√° assistidas");
        System.out.println("3. Favoritas");
        System.out.print("Escolha uma lista (1-3) ou 0 para voltar: ");
        
        try {
            int opcao = Integer.parseInt(scanner.nextLine());
            // Implementa√ß√£o futura
            System.out.println("\nüî® Funcionalidade em desenvolvimento...");
        } catch (NumberFormatException e) {
            System.out.println("‚ö† Op√ß√£o inv√°lida.");
        }
    }

    private void ordenarListas() {
        System.out.println("\nüîÉ ORDENAR LISTAS");
        System.out.println("1. Por avalia√ß√£o");
        System.out.println("2. Por data de adi√ß√£o");
        System.out.println("3. Por ordem alfab√©tica");
        System.out.print("Escolha um crit√©rio (1-3) ou 0 para voltar: ");
        
        try {
            int opcao = Integer.parseInt(scanner.nextLine());
            // Implementa√ß√£o futura
            System.out.println("\nüî® Funcionalidade em desenvolvimento...");
        } catch (NumberFormatException e) {
            System.out.println("‚ö† Op√ß√£o inv√°lida.");
        }
    }
}